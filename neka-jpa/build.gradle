version "${nekaDataJpaVersion}"

apply plugin: "idea"
apply plugin: "maven"
apply plugin: "java-library"
apply plugin: "wrapper"
apply plugin: "jacoco"

java {
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    api platform(project(":neka-bom"))
    implementation project(":neka-common")

    api "com.querydsl:querydsl-core"
    api "com.querydsl:querydsl-jpa"

    api "org.springframework.boot:spring-boot-starter-data-jpa"
    api "org.springframework.security:spring-security-core"

    api "com.fasterxml.jackson.core:jackson-annotations"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok:1.18.24"
    annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    annotationProcessor "javax.annotation:javax.annotation-api:1.3.2"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"

    testCompileOnly "org.projectlombok:lombok"
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'com.h2database:h2'
    testAnnotationProcessor "org.projectlombok:lombok:1.18.24"
    testAnnotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    testAnnotationProcessor "javax.annotation:javax.annotation-api:1.3.2"
    testAnnotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"
}


test {
    useJUnitPlatform()

    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {

    executionData(fileTree(dir: "$buildDir/jacoco", include: "*.exec"))

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                     //          exclude: ["**/entity/query/**", "**/security/**", "**/converter/**", "**/constants/**", "**/config/**", "**/mapper/**", "**/*Application*", "**/entity/Q*"]
            )
        }))
    }
}




publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "Neka JPA"
                description = "Neka JPA java library"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "celebikutay"
                        name = "Kutay Ã‡elebi"
                        email = "mail@kutaycelebi.com"
                    }
                }
            }
        }
    }
}
